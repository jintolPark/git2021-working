--화면구현
typescript, react, react-router(화면이동)

typescript:
- 마이크로소프트 개발
- 구글 Angular 2 ~, 프론트엔드 프레임워크 사용 2016~ 2017
 -> Angular.js(javascript)
    -> 프론트엔드 개발 파괴적인 방법을 사용
 -> Angular2 (typescript)
    -> 기존버전 호환성을 제거하겠다.
- javascript 상위 호환버전 (superset)
  -> 원래 javascript에 타입 이라는걸 추가
    -> javascript type(형식)이 느슨함 - 장점이자 단접
    let a = {};
    a="abc"
    a=0;
    a={};
    a.phone = "sdasd";
    -> 형식의 ㅇ연성으로 데이터를 다루기는 좋음 (변환, 동적으로 구조만듦)
    -> 형식이 없으므로 인한 오류 발생 가능성
- 실행될 때는 javascript 변환한 다음에 실행
  -> 현재 자동화된 기법이 많이 발달해서 자동 변환
- 현재 20 ~ 25% 점유율, 프론트 엔드
- 장점: 타입체크로 사전에 오류방지(숫자->문자), 자동완성(개발도구, IDE)
- 단점: 코드를 좀더 많이 짜야함. 코드를 짤 때 형식에 대해서 생각.
         데이터 구조의 유연성이 떨어짐.

LTS(Long Term Support)
- 오랜기간동안 지원
- 보안업데이트, 버그픽스
- 3~5년


Node.js
- chrome N8 -> 자바스크립트 엔진
- javascript -> 컴파일 -> 실행
- 백엔드(서버) 사용하기 시작
- 프론트엔드
   -> js ->  코드합치고 연결하는 (빌드)
   -> js 라이브러리 관리(패키지, 모듈)관리 (패키지 매니저)

npm(node package manager)
- js(ts)로 개발한 코드들을 관리

npm install 모듈명(라이브러리 이름)
-해당 모듈을 npm 저장소에서 받아와서 설치
   -> npm저장소(npmjs)
- -g(global, 전역), 어디서나 해당 모듈을 쓸수 있음
    
--영어
1.용어
2.오류메세지

create-react-app 애플리케이션이름 옵션
 
npx: npm 모듈을 설치하고 실행하라


/node_modules: javascript 라이브러리
- npm install로 설치하면 설치되는 위치
/packge.json 
- 앱설명
- 사용하는 라이브러리 목록
- 실행 스크립트

.gitignore
-git으로 형상관리 제외할 항목
-/node_modules 제외
   -> 설치할 라이브러리는 형상관리를 하지 않음
-> npm install
package.json, lock.json 파일을 보고 추가모듈을 설치함

코드 -> 컴파일 -> 이진언어(컴퓨터)
코드(ts) -> 컴파일 -> 중간언어 (js) ->브라우저
코드(js) -> 컴파일 -> 중간언어 (js) ->브라우저

npm start
: 개발모드로 프로젝트(코드여러개) 를 실행함
-> 코드를 수정할때마다 서버를 재가동함
:react-script start

npm run build
: 배포용으로 프로젝트를 필드함

. /build 
: 실제로 상용 서비스에 사용할 빌드된 파일
   -> 빌드: 소스코드 여러개를 컴파일 연결(linking)

--------------------------------------------------------------------------

. 개발모드에서 
1. /public/index.html 을로딩함
2. /src/index.tsx를 로딩함
3. App컴포넌트(최상위컴포넌트)를  id가 root인 요소에 렌더링함









